ltys <- c(1,2)
pchs <- c(1,2)
lbls <- c("Non-Navigational","Navigational")
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=avgScores$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$p10, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$p10, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0.7, y=max(yrange), legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
xrange <- range(as.numeric(avgRr_NonNav$alpha))
yrange <- range(c(avgRr_Nav$rr, avgRr_NonNav$rr))
margin=c(3,3,1,1)
cols <- c("blue", "red")
ltys <- c(1,2)
pchs <- c(1,2)
lbls <- c("Non-Navigational","Navigational")
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=avgScores$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$rr, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$rr, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0.7, y=max(yrange), legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
margin=c(3,3,1,1)
cols <- c("blue", "red")
ltys <- c(1,2)
pchs <- c(1,2)
lbls <- c("Non-Navigational","Navigational")
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=avgScores$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$rr, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$rr, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0.1, y=min(yrange), legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
box(lty=1, col='black')
axis(side=1, at=avgScores$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$rr, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$rr, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0, y=0.35, legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
margin=c(3,3,1,1)
cols <- c("blue", "red")
ltys <- c(1,2)
pchs <- c(1,2)
lbls <- c("Non-Navigational","Navigational")
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=avgScores$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$rr, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$rr, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0, y=0.35, legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=avgRr_NonNav$alpha)
axis(side=2, at=seq(round(min(yrange),3), round( max(yrange),3)+0.01,by=round((max(yrange)-min(yrange))/7,3)))
lines(avgRr_NonNav$alpha, avgRr_NonNav$rr, type="b", lwd=lW, lty=ltys[1], pch=1, col=cols[1])
lines(avgRr_Nav$alpha, avgRr_Nav$rr, type="b", lwd=lW, lty=ltys[2], pch=2, col=cols[2])
mtext(side=1, expression(alpha), line=2)
mtext(side=2, "Reciprocal Rank", line=2)
legend(x=0, y=0.35, legend=lbls, lty=ltys, pch=pchs, ncol=1, text.width= 1, col=cols, bty='n', lwd=lW, cex=1.2, xpd=TRUE,y.intersp=2, x.intersp=0.5)
dev.copy(pdf,paste(outputPath, "rr_Navigational.pdf", sep=""), width=w, height=h)
dev.off()
rm(list = ls())
trecEvalResult <- read.table("../data/ter_hard2003_tuneB.eval", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
avgScores = aggregate(trecEvalResult[,6:10],list(trecEvalResult$schema, trecEvalResult$alpha, trecEvalResult$bt, trecEvalResult$bb), mean)
colnames(avgScores)[2] <- "alpha"
colnames(avgScores)[3] <- "bt"
colnames(avgScores)[4] <- "bb"
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
w = 8
h = 6
margin=c(5,3,1,1)
lW = 1.5
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title",
"Best of All", "Significant Best")
cols <- c("blue", "orange", "darkred", "blue","orange", "purple", "purple")
ltys <- c(0,0,0,0,0,0)
pchs <- c(2,5,1,6,0,4,8)
par(mar=margin)
boxplot(ndcg10~factor(bt), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bt*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bt*20)+1)
{
temp = avgScores[avgScores$bt == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if (!is.nan(sig))
{
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
}
mtext(side=1, "B title", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=1.8, inset= c(0,-0.25),text.width= 3)
par(mar=margin)
boxplot(ndcg10~factor(bb), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bb*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bb*20)+1)
{
temp = avgScores[avgScores$bb == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
mtext(side=1, "B body", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=2, inset= c(0,-0.20),text.width= 3)
rm(list = ls())
trecEvalResult <- read.table("../data/ter_hard2005_tuneB.eval", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
avgScores = aggregate(trecEvalResult[,6:10],list(trecEvalResult$schema, trecEvalResult$alpha, trecEvalResult$bt, trecEvalResult$bb), mean)
colnames(avgScores)[2] <- "alpha"
colnames(avgScores)[3] <- "bt"
colnames(avgScores)[4] <- "bb"
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
w = 8
h = 6
margin=c(5,3,1,1)
lW = 1.5
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title",
"Best of All", "Significant Best")
cols <- c("blue", "orange", "darkred", "blue","orange", "purple", "purple")
ltys <- c(0,0,0,0,0,0)
pchs <- c(2,5,1,6,0,4,8)
par(mar=margin)
boxplot(ndcg10~factor(bt), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bt*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bt*20)+1)
{
temp = avgScores[avgScores$bt == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if (!is.nan(sig))
{
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
}
mtext(side=1, "B title", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=1.8, inset= c(0,-0.25),text.width= 3)
par(mar=margin)
boxplot(ndcg10~factor(bb), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bb*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bb == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bb*20)+1)
{
temp = avgScores[avgScores$bb == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
mtext(side=1, "B body", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=2, inset= c(0,-0.20),text.width= 3)
rm(list = ls())
trecEvalResult <- read.table("../data/ter_web_tuneB.eval", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
avgScores = aggregate(trecEvalResult[,6:10],list(trecEvalResult$schema, trecEvalResult$alpha, trecEvalResult$bt, trecEvalResult$bb), mean)
colnames(avgScores)[2] <- "alpha"
colnames(avgScores)[3] <- "bt"
colnames(avgScores)[4] <- "bb"
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
w = 8
h = 6
margin=c(5,3,1,1)
lW = 1.5
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title",
"Best of All", "Significant Best")
cols <- c("blue", "orange", "darkred", "blue","orange", "purple", "purple")
ltys <- c(0,0,0,0,0,0)
pchs <- c(2,5,1,6,0,4,8)
par(mar=margin)
boxplot(ndcg10~factor(bt), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bt*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bt*20)+1)
{
temp = avgScores[avgScores$bt == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if (!is.nan(sig))
{
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
}
mtext(side=1, "B title", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=1.8, inset= c(0,-0.25),text.width= 3)
rm(list = ls())
trecEvalResult <- read.table("../data/ter_web_tuneB.eval", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
avgScores = aggregate(trecEvalResult[,6:10],list(trecEvalResult$schema, trecEvalResult$alpha, trecEvalResult$bt, trecEvalResult$bb), mean)
colnames(avgScores)[2] <- "alpha"
colnames(avgScores)[3] <- "bt"
colnames(avgScores)[4] <- "bb"
View(avgScores)
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
w = 8
h = 6
margin=c(5,3,1,1)
lW = 1.5
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title",
"Best of All", "Significant Best")
cols <- c("blue", "orange", "darkred", "blue","orange", "purple", "purple")
ltys <- c(0,0,0,0,0,0)
pchs <- c(2,5,1,6,0,4,8)
par(mar=margin)
boxplot(ndcg10~factor(bt), data=avgScores)
bestAll = avgScores[which.max(avgScores$ndcg10),]
bestAll_run = trecEvalResult[trecEvalResult$alpha == bestAll$alpha &
trecEvalResult$bt == bestAll$bt &
trecEvalResult$bb == bestAll$bb,]
points((bestAll$bt*20)+1, bestAll$ndcg10, pch=pchs[6], col=cols[6], lwd=lW, cex=1.5)
for(i in 1:21)
{
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 1,]
bestTitleOnly = temp[which.max(temp$ndcg10),]
points(i, bestTitleOnly$ndcg10, pch=pchs[1],   col=cols[1], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0,]
bestBodyOnly = temp[which.max(temp$ndcg10),]
points(i, bestBodyOnly$ndcg10, pch=pchs[2],   col=cols[2], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.5,]
bestTitleBody = temp[which.max(temp$ndcg10),]
points(i, bestTitleBody$ndcg10, pch=pchs[3],   col=cols[3], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.8,]
bestTitleBoost = temp[which.max(temp$ndcg10),]
points(i, bestTitleBoost$ndcg10, pch=pchs[4],   col=cols[4], lwd=lW)
temp = avgScores[avgScores$bt == (i-1)/20 & avgScores$alpha == 0.2,]
bestBodyBoost = temp[which.max(temp$ndcg10),]
points(i, bestBodyBoost$ndcg10, pch=pchs[5],   col=cols[5], lwd=lW)
if(i != (bestAll$bt*20)+1)
{
temp = avgScores[avgScores$bt == (i-1)/20,]
bestI = temp[which.max(temp$ndcg10),]
bestI_run = trecEvalResult[trecEvalResult$alpha == bestI$alpha &
trecEvalResult$bt == bestI$bt &
trecEvalResult$bb == bestI$bb,]
sig = t.test(bestAll_run$ndcg10,bestI_run$ndcg10,paired=TRUE,two.sided=TRUE)$p.value
if (!is.nan(sig))
{
if(sig <= 0.05)
{
points(i, bestI$ndcg10, pch=pchs[7],   col=cols[7], lwd=lW)
}
}
}
}
mtext(side=1, "B title", line=2)
mtext(side=2, "nDCG@10", line=2)
legend("bottom", lbls, lty=ltys, ncol=5,  xpd=TRUE, col=cols, bty='n', lwd=lW, pch=pchs, cex=1, seg.len=1, x.intersp=0.005, y.intersp=1.8, inset= c(0,-0.25),text.width= 3)
rm(list = ls())
trecEvalResult <- read.table("/Volumes/Data/Github/ipm2017_fielded_retrieval/data/evalTuneBoost_Clef2016.txt", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
titleOnly=trecEvalResult[trecEvalResult$alpha==1,]
bodyOnly=trecEvalResult[trecEvalResult$alpha==0,]
titleBody=trecEvalResult[trecEvalResult$alpha==0.5,]
titleBoost=trecEvalResult[trecEvalResult$alpha==0.8,]
bodyBoost=trecEvalResult[trecEvalResult$alpha==0.2,]
queries=unique(trecEvalResult$QueryNum)
lW = 1.5
w = 8
h = 4
margin=c(5,3,1,1)
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title")
cols <- c("blue", "orange", "gray40", "blue","orange")
ltys <- c(0,0,0,0,0)
pchs <- c(2,5,3,6,0)
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
xrange <- range(c(factor(queries)))
yrange <- range(c(0,1))
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=factor(queries))
axis(side=2, at=seq(0, 1,by=0.2))
lines(factor(queries), titleOnly$ndcg10, type="o", lwd=lW, pch=pchs[1], lty=ltys[1], col=cols[1])
lines(factor(queries), bodyOnly$ndcg10, type="o", lwd=lW, pch=pchs[2], lty=ltys[2], col=cols[2])
lines(factor(queries), titleBody$ndcg10, type="o", lwd=lW, pch=pchs[3], lty=ltys[3], col=cols[3])
lines(factor(queries), titleBoost$ndcg10, type="o", lwd=lW, pch=pchs[4],lty=ltys[4], col=cols[4])
lines(factor(queries), bodyBoost$ndcg10, type="o", lwd=lW, pch=pchs[5], lty=ltys[5], col=cols[5])
mtext(side=1, "Query", line=2)
mtext(side=2, "nDCG @ 10", line=2)
rm(list = ls())
trecEvalResult <- read.table("/Volumes/Data/Github/ipm2017_fielded_retrieval/data/evalTuneBoost_Clef2016.txt", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
titleOnly=trecEvalResult[trecEvalResult$alpha==1,]
bodyOnly=trecEvalResult[trecEvalResult$alpha==0,]
titleBody=trecEvalResult[trecEvalResult$alpha==0.5,]
titleBoost=trecEvalResult[trecEvalResult$alpha==0.8,]
bodyBoost=trecEvalResult[trecEvalResult$alpha==0.2,]
queries=unique(trecEvalResult$QueryNum)
lW = 1.5
w = 8
h = 4
margin=c(5,3,1,1)
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title")
cols <- c("blue", "orange", "gray40", "blue","orange")
ltys <- c(0,0,0,0,0)
pchs <- c(2,5,3,6,0)
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
xrange <- range(c(factor(queries)))
yrange <- range(c(0,1))
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=factor(queries))
axis(side=2, at=seq(0, 1,by=0.2))
lines(factor(queries), titleOnly$ndcg10, type="o", lwd=lW, pch=pchs[1], lty=ltys[1], col=cols[1])
lines(factor(queries), bodyOnly$ndcg10, type="o", lwd=lW, pch=pchs[2], lty=ltys[2], col=cols[2])
lines(factor(queries), titleBody$ndcg10, type="o", lwd=lW, pch=pchs[3], lty=ltys[3], col=cols[3])
lines(factor(queries), titleBoost$ndcg10, type="o", lwd=lW, pch=pchs[4],lty=ltys[4], col=cols[4])
lines(factor(queries), bodyBoost$ndcg10, type="o", lwd=lW, pch=pchs[5], lty=ltys[5], col=cols[5])
mtext(side=1, "Query", line=2)
mtext(side=2, "nDCG @ 10", line=2)
rm(list = ls())
trecEvalResult <- read.table("/Volumes/Data/Github/ipm2017_fielded_retrieval/data/evalTuneBoost_Web.txt", header=TRUE, row.names=NULL)
trecEvalResult$alpha = trecEvalResult$alpha/10
titleOnly=trecEvalResult[trecEvalResult$alpha==1,]
bodyOnly=trecEvalResult[trecEvalResult$alpha==0,]
titleBody=trecEvalResult[trecEvalResult$alpha==0.5,]
titleBoost=trecEvalResult[trecEvalResult$alpha==0.8,]
bodyBoost=trecEvalResult[trecEvalResult$alpha==0.2,]
```
# get list of query ids
```
queries=unique(trecEvalResult$QueryNum)
```
# General Chart Setup
```
lW = 1.5
w = 8
h = 4
margin=c(5,3,1,1)
lbls <- c("Title Only", "Body Only", "Title = Body", "Title > Body", "Body > Title")
cols <- c("blue", "orange", "gray40", "blue","orange")
ltys <- c(0,0,0,0,0)
pchs <- c(2,5,3,6,0)
outputPath = "/Volumes/Data/Github/ipm2017_fielded_retrieval/latex_irj/"
```
***** Plot nDCG@10 Detail per query
```
xrange <- range(c(factor(queries)))
yrange <- range(c(0,1))
par(mar=margin)
plot(xrange, yrange, type="n", xlab=NA, ylab=NA, axes=FALSE)
box(lty=1, col='black')
axis(side=1, at=factor(queries))
axis(side=2, at=seq(0, 1,by=0.2))
lines(factor(queries), titleOnly$ndcg10, type="o", lwd=lW, pch=pchs[1], lty=ltys[1], col=cols[1])
lines(factor(queries), bodyOnly$ndcg10, type="o", lwd=lW, pch=pchs[2], lty=ltys[2], col=cols[2])
lines(factor(queries), titleBody$ndcg10, type="o", lwd=lW, pch=pchs[3], lty=ltys[3], col=cols[3])
lines(factor(queries), titleBoost$ndcg10, type="o", lwd=lW, pch=pchs[4],lty=ltys[4], col=cols[4])
lines(factor(queries), bodyBoost$ndcg10, type="o", lwd=lW, pch=pchs[5], lty=ltys[5], col=cols[5])
mtext(side=1, "Query", line=2)
mtext(side=2, "nDCG @ 10", line=2)
View(titleBody)
